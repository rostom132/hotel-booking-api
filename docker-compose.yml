version: '3'
services:
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_DB: hotel_booking
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_password
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    container_name: elasticsearch-container
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - my-network
    user: "1000:1000"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.2
    container_name: kibana-container
    ports:
      - "5601:5601"
    networks:
      - my-network
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200

  my-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: my-api-image
    container_name: my-api-container
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - elasticsearch
    networks:
      - my-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel_booking
      SPRING_DATASOURCE_USERNAME: api_user
      SPRING_DATASOURCE_PASSWORD: api_password
      SPRING_ELASTICSEARCH_NAME: elasticsearch
      SPRING_ELASTICSEARCH_NODE: elasticsearch:9200
      SPRING_ELASTICSEARCH_URIS: elasticsearch:9200

networks:
  my-network:
    driver: bridge
